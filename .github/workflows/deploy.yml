name: Deploy to Azure

on:
  push:
    branches:
      - main
    paths:
      - 'backend/**'
      - 'frontend/**'

env:
  IMAGE_NAME: walory-backend

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Install Azure CLI and Authenticate
      run: |
        curl -sL https://aka.ms/InstallAzureCLIDeb | sudo bash
        az login --service-principal -u "${{ secrets.AZURE_CLIENT_ID }}" -p "${{ secrets.AZURE_CLIENT_SECRET }}" --tenant "${{ secrets.AZURE_TENANT_ID }}"

    - name: Register Azure Resource Provider
      run: |
        az provider register -n Microsoft.App --wait

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Login to Azure Container Registry
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.ACR_USERNAME }}
        password: ${{ secrets.ACR_PASSWORD }}
        registry: ${{ secrets.ACR_LOGIN_SERVER }}

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: ./backend
        file: ./backend/Walory Backend/Dockerfile
        push: true
        tags: ${{ secrets.ACR_LOGIN_SERVER }}/${{ env.IMAGE_NAME }}:latest

    - name: Deploy to Azure Container Apps
      uses: azure/container-apps-deploy-action@v1
      with:
        imageToDeploy: ${{ secrets.ACR_LOGIN_SERVER }}/${{ env.IMAGE_NAME }}:latest
        resourceGroup: ${{ secrets.RESOURCE_GROUP }}
        containerAppName: ${{ secrets.AZURE_CONTAINER_APP }}
        environmentVariables: |
          ASPNETCORE_ENVIRONMENT=${{ secrets.ENVIRONMENT }}
          ConnectionStrings__DefaultConnection=${{ secrets.POSTGRES_CONNECTION }}
        registryUrl: ${{ secrets.ACR_LOGIN_SERVER }}
        registryUsername: ${{ secrets.ACR_USERNAME }}
        registryPassword: ${{ secrets.ACR_PASSWORD }}
